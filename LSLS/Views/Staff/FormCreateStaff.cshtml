@model LSLS.Models.Staff

@{
    ViewBag.Title = "Create Company Staff";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ul class="breadcrumb">
    <li>@Html.ActionLink("Home", "Main", "Account")</li>
    <li>@Html.ActionLink("Company Staffs", "ListAllStaffs", "Staff")</li>
    <li class="active">Create New Company Staff</li>
</ul>

<div class="container">
    <div class="panel panel-default">
        <div class="panel-heading">
            <span class="glyphicon glyphicon-th"></span>
        </div>
        <div class="panel-body">
            @using (Html.BeginForm("SaveStaff", "Staff"))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <div class="panel-title">Company Staff Account</div>
                    <hr/>
                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                    <div class="form-group">
                        @Html.LabelFor(model => model.StaffEmployeeId, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StaffEmployeeId, new {htmlAttributes = new {@class = "form-control", placeholder = "Ex. E0001 E0002 E0003"}})
                            @Html.ValidationMessageFor(model => model.StaffEmployeeId, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StaffUsername, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StaffUsername, new {htmlAttributes = new {@class = "form-control", placeholder = "Username"}})
                            @Html.ValidationMessageFor(model => model.StaffUsername, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StaffPassword, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StaffPassword, new {htmlAttributes = new {@class = "form-control", placeholder = "Password"}})
                            @Html.ValidationMessageFor(model => model.StaffPassword, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StaffConfirmPassword, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StaffConfirmPassword, new {htmlAttributes = new {@class = "form-control", placeholder = "Confirm Password"}})
                            @Html.ValidationMessageFor(model => model.StaffConfirmPassword, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <hr/>
                    <div class="panel-title">Company Staff Information</div>
                    <hr/>
                    <div class="form-group">
                        @Html.LabelFor(model => model.StaffFullname, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StaffFullname, new {htmlAttributes = new {@class = "form-control", placeholder = "Firstname and Lastname"}})
                            @Html.ValidationMessageFor(model => model.StaffFullname, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StaffGender, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.StaffGender, new[]
                            {
                                new SelectListItem {Text = "Select", Value = ""},
                                new SelectListItem {Text = "Male", Value = "Male"},
                                new SelectListItem {Text = "Female", Value = "Female"}
                            }, new {@class = "form-control"})

                            @Html.ValidationMessageFor(model => model.StaffGender, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StaffCitizenId, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StaffCitizenId, new {htmlAttributes = new {@class = "form-control", placeholder = "CitizenID"}})
                            @Html.ValidationMessageFor(model => model.StaffCitizenId, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StaffBirthdate, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.StaffBirthdate, new {@class = "form-control", type = "date", placeholder = "DD/MM/YYYY"})
                            @Html.ValidationMessageFor(model => model.StaffBirthdate, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StaffAddress, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StaffAddress, new {htmlAttributes = new {@class = "form-control", placeholder = "Address"}})
                            @Html.ValidationMessageFor(model => model.StaffAddress, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StaffEmail, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StaffEmail, new {htmlAttributes = new {@class = "form-control", placeholder = "example@example.com"}})
                            @Html.ValidationMessageFor(model => model.StaffEmail, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StaffTelephoneNo, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StaffTelephoneNo, new {htmlAttributes = new {@class = "form-control", placeholder = "0812345678"}})
                            @Html.ValidationMessageFor(model => model.StaffTelephoneNo, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <hr/>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-success"/>
                            @Html.ActionLink("Cancel", "ListAllStaffs", "Staff", new {@class = "btn btn-default "})
                        </div>

                    </div>

                </div>
            }
        </div>

    </div>

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}