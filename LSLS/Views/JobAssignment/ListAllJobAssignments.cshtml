@model IEnumerable<LSLS.Models.JobAssignment>

@{
    ViewBag.Title = "JobAssignments";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ul class="breadcrumb">
    <li class="breadcrumb-item"><a href="@Url.Action("Main", "Account")">Home</a></li>
    <li class="breadcrumb-item active">Job Assignments</li>
</ul>

<div class="container-fluid">
        @*
        <div class="alert alert-warning">
            <p>
                @Html.ActionLink("!Please add Shipping before add Job Assignment", "ListAllTransportationInfs", "TransportationInf")
            </p>
        </div>
        *@


    <div class="card">

        <div class="card-header">
            <h5 class="card-title">Job Assignments</h5>
        </div>

        <div class="card-body">

            <table id="jobAssignments" class="table table-striped table-bordered">
                <thead>
                <tr>
                    <th>Date</th>
                    <th>TruckID</th>
                    <th>Starting Point</th>
                    <th>Destination</th>
                    <th>Shipping No.</th>
                    <th>Status</th>
                    <th>Option</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.JobAssignmentDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TruckDriver.TruckId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StartingPointJob)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DestinationJob)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.TransportationInf.ShippingId)
                        </td>

                        <td>
                            @(item.JobAssignmentStatus.Equals(true) ? Html.Label("Complete", new {@class = "badge badge-success" }) : Html.Label("Not Complete", new {@class = "badge badge-danger" }))
                        </td>

                        <td>
                            @Html.ActionLink("Detail", "DetailsJobAssignment", new {jobAssignmentId = item.JobAssignmentId}, new {@class = "btn btn-info btn-sm"})
                            @Html.ActionLink("Edit", "FormEditJobAssignment", new {jobAssignmentId = item.JobAssignmentId}, new {@class = "btn btn-warning btn-sm"})
                            @Html.ActionLink("Delete", "DeleteJobAssignment", new {jobAssignmentId = item.JobAssignmentId}, new {@class = "btn btn-danger btn-sm"})
                        </td>

                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>


</div>


@section scripts
{
    <script>
        $(document).ready(function () {
            $("#jobAssignments").DataTable();
        });
    </script>
}