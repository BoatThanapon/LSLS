@model LSLS.Models.TransportationInf

@{
    ViewBag.Title = "FormEditTransportationInf";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ul class="breadcrumb">
    <li>@Html.ActionLink("Home", "Main", "Account")</li>
    <li>@Html.ActionLink("Transportation Informations", "ListAllTransportationInfs", "TransportationInf")</li>
    <li class="active">Edit Shipping</li>
</ul>

<div class="container">
    <div class="panel panel-warning">
        <div class="panel-heading">
            <span class="glyphicon glyphicon-th"></span> Edit Shipping
        </div>
        <div class="panel-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ShippingId)
                    @Html.HiddenFor(model => model.StatusOfTransportation)
                    @Html.HiddenFor(model => model.JobIsActive)
                    @Html.HiddenFor(model => model.ReceiveDateTime)


                    <div class="form-group">
                        @Html.LabelFor(model => model.StatusOfTransportation, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @(Model.StatusOfTransportation.Equals(true) ?
                                  Html.Label("Complete", new { @class = "alert alert-success" }) :
                                  Html.Label("Not Complete", new { @class = "alert alert-danger" }))

                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateOfTransportation, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateOfTransportation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateOfTransportation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StartingPoint, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StartingPoint, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StartingPoint, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Destination, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Destination, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Employer, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Employer, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Employer, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ReceiverName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ReceiverName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ReceiverName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ShippingNote, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ShippingNote, new { htmlAttributes = new { @class = "form-control", placeholder = "Shipping Note", disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.ShippingNote, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ReceiveDateTime, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @(Model.ReceiveDateTime.Equals(null) ?
                                  Html.Label("Not Complete Yet!", new { @class = "alert alert-dismissible alert-danger" }) :
                                  Html.EditorFor(model => model.ReceiveDateTime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            )
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Edit" class="btn btn-warning" />
                            @Html.ActionLink("Cancel", "ListAllTransportationInfs", "", new { @class = "btn btn-default" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}